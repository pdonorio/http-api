
# ################
# ################

# ## RUN THE STACK

# Please use the bash script at the repo root directory:
# ./do help

# ################
# ################

#################################
# GRAPHdb neo4j
graphdb:
    image: neo4j:2.3.3
    hostname: gdb
    environment:
      NEO4J_AUTH: neo4j/eudatapi
      # Other parameters?
      #NEO4J_HEAP_MEMORY
      #NEO4J_CACHE_MEMORY
    volumes:
        - ${VOLUMES_PREFIX}_graphdata:/data

#################################
# TextIndexing elasticsearch
searchindex:
  image: elasticsearch
  hostname: elastic
  # environment:
  #     ES_HEAP_SIZE: 2g
  #     # curl http://el:9200/_nodes/process?pretty
  #     # http://stackoverflow.com/a/18152957/2114395
  #     #https://www.loggly.com/blog/nine-tips-configuring-elasticsearch-for-high-performance/
  volumes:
      - ${VOLUMES_PREFIX}_elasticdata:/usr/share/elasticsearch/data
      - ./confs/elastic:/usr/share/elasticsearch/config

#################################
# REDIS key/value store
redqueue:
  image: redis:alpine
  command: redis-server --appendonly yes
  hostname: myqueue
  volumes:
      - ${VOLUMES_PREFIX}_redisdata:/data

worker:
  extends:
    file: docker-compose.yml
    service: rest
  hostname: celworker
  command: celery worker -A restapi.resources.services.celery.worker.celery_app

#################################
# iRODS iCAT server for EUDAT B2safe
rest:
    hostname: api
    image: eudatb2safe/apiserver
    command: ./boot
    environment:

      ## MODES
      # APP_MODE: debug
      # APP_MODE: development
      # APP_MODE: production

      # Base the user/role mechanism on neo4j
      BACKEND_AUTH_SERVICE: graphdb

      # # Application credentials to use the b2access environment
      # B2ACCESS_APPNAME: httpapi
      # B2ACCESS_APPKEY: GIVEMEAVALIDKEY

      ## Connection to irods
      IRODS_USER: rods
      # IRODS_AUTHSCHEME: GSI
      # IRODS_USER: paolo
      IRODS_ZONE: tempZone

      ## X509 certificates variables
      #CA Authority
      # X509_CERT_DIR: /opt/certificates/caauth
      # #USER PEMs: Private (key) and Public (Cert)
      # X509_USER_CERT: /opt/certificates/guest/usercert.pem
      # X509_USER_KEY: /opt/certificates/guest/userkey.pem

    working_dir: /code
    volumes:
        # Base code
        - ./backend:/code
        # Rest API configuration
        - ./vanilla/specs:/code/restapi/confs/endpoints
        # Rest API services models
        - ./vanilla/models:/code/commons/models/custom
        # Rest API asynchrounous tasks
        - ./vanilla/tasks:/code/commons/tasks/custom
        # Rest API endpoints
        - ./vanilla/apis:/code/restapi/resources/custom
        # # B2ACCESS dev certificates
        # - ./certs:/usr/local/share/ca-certificates
        # Tests
        - ./vanilla/tests:/code/test/custom

        # # Uploads dir
        # - ${VOLUMES_PREFIX}_tmpuploads:/uploads
        # # Sql lite database (only for this container)
        # - ${VOLUMES_PREFIX}_restlitedb:/dbs
        # # External irods Authority
        # - ./certs/caauth:/opt/certificates/caauth
        # # External irods User
        # - ./certs/user:/opt/certificates/mynewuser

    # volumes_from:
    #   - certshare

#################################
# REST API client
# (wget, curl, httpie, http-prompt)

apitests:
    image: eudatb2safe/apiclient
    command: sleep 1234567890

#################################
# Nginx proxy
proxy:
    image: nginx
    hostname: myproxy
    volumes:
        # Proxy configuration
        - ./confs/nginx.conf:/etc/nginx/nginx.conf
    links:
        - rest:restapi

#################################
# Shared volume(s)
certshare:
    image: alpine
    command: echo "Data volume on"
    volumes:
      - ${VOLUMES_PREFIX}_sharedcerts:/opt/certificates

#################################
# Postgres database server
sql:
    image: postgres
    volumes:
      - ${VOLUMES_PREFIX}_sqldata:/var/lib/postgresql/data
    environment:
      ## FOR IRODS
        POSTGRES_USER: irods
        POSTGRES_PASSWORD: icatserver
        POSTGRES_DB: ICAT

#################################
# iRODS iCAT server for EUDAT B2safe
icat:

    # # Simple irods server
    #image: cineca/icat

    ## OR

    # B2safe instance on irods
    image: eudatb2safe/b2safe

    # # Open irods port to Outside world
    # ## CAREFULL: don't uncomment the two lines below if you don't know why
    # ports:
    #     - 1247:1247

    hostname: rodserver
    volumes:
        - ${VOLUMES_PREFIX}_etcconf:/etc
        - ${VOLUMES_PREFIX}_irodshome:/home/irods
        - ${VOLUMES_PREFIX}_irodsvar:/var/lib/irods
        - ${VOLUMES_PREFIX}_eudatopt:/opt
        # a script to do operations inside the irods container
        - ./confs/irestart.sh:/irestart
    volumes_from:
      - certshare
    links:
        - sql:db

#################################
# Database administration

# This docker image let you access sqllite/postgres/mysql
# with a phpmyadmin-like web page
sqladmin:
    image: clue/adminer
    links:
        - sql:db
    ports:
        - 8888:80
